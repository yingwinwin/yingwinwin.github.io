(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{189:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return b}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=i.a.createContext({}),d=function(e){var n=i.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=d(e.components);return i.a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},h=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(t),h=r,b=u["".concat(l,".").concat(h)]||u[h]||p[h]||o;return t?i.a.createElement(b,a(a({ref:n},c),{},{components:t})):i.a.createElement(b,a({ref:n},c))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=h;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var c=2;c<o;c++)l[c]=t[c];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},80:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(3),i=t(7),o=(t(0),t(189)),l=["components"],a={id:"ds_doublyLinkedList",title:"\u53cc\u5411\u94fe\u8868"},s={unversionedId:"ds_doublyLinkedList",id:"ds_doublyLinkedList",isDocsHomePage:!1,title:"\u53cc\u5411\u94fe\u8868",description:"\u53cc\u5411\u94fe\u8868\uff1a\u5f53\u524d\u8282\u70b9\u53ef\u4ee5\u6307\u5411\u4e0a\u4e00\u4e2a\u8282\u70b9\uff0c\u4e5f\u53ef\u4ee5\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002\u53ef\u4ee5\u4ece\u5934\u904d\u5386\u5230\u5c3e\u90e8\uff0c\u53c8\u53ef\u4ee5\u4ece\u5c3e\u90e8\u904d\u5386\u5230\u5934",source:"@site/docs/ds_doublyLinkedList.md",slug:"/ds_doublyLinkedList",permalink:"/docs/ds_doublyLinkedList",editUrl:"https://github.com/yingwinwin/yingwinwin.github.io/tree/master/docs/ds_doublyLinkedList.md",version:"current"},c=[],d={toc:c};function u(e){var n=e.components,t=Object(i.a)(e,l);return Object(o.b)("wrapper",Object(r.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u53cc\u5411\u94fe\u8868\uff1a\u5f53\u524d\u8282\u70b9\u53ef\u4ee5\u6307\u5411\u4e0a\u4e00\u4e2a\u8282\u70b9\uff0c\u4e5f\u53ef\u4ee5\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002\u53ef\u4ee5\u4ece\u5934\u904d\u5386\u5230\u5c3e\u90e8\uff0c\u53c8\u53ef\u4ee5\u4ece\u5c3e\u90e8\u904d\u5386\u5230\u5934")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u7f3a\u70b9\uff1a"),Object(o.b)("ol",{parentName:"blockquote"},Object(o.b)("li",{parentName:"ol"},"\u76f8\u5bf9\u5355\u5411\u94fe\u8868\u590d\u6742"),Object(o.b)("li",{parentName:"ol"},"\u5360\u7528\u7684\u66f4\u591a\u7684\u5185\u5b58\u7a7a\u95f4"))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"  // \u5355\u72ec\u7684\u8282\u70b9\n  class DoublyNode {\n    constructor(data){\n      this.next = null;\n      this.data = data;\n      this.prev = null;\n    }\n  }\n\n  class DoublyLinkList {\n    constructor(){\n      this.head = null;  // \u6307\u5411\u7b2c\u4e00\u4e2a\u8282\u70b9\n      this.tail = null;  // \u6307\u5411\u6700\u540e\u4e00\u4e2a\u8282\u70b9\n      this.length = 0;\n    }\n\n    append(data) {\n      let newNode = new DoublyNode(data);\n      if(!this.head) {\n        this.head = newNode;\n        this.tail = newNode;\n      } else {\n        // tail\u7684\u6307\u5411\u662f\u94fe\u8868\u7684\u6700\u540e\u4e00\u9879\n        this.tail.next = newNode;  // \u65b0\u589e\u8282\u70b9\u7684\u65f6\u5019\uff0c\u8981\u628atail\u7684\u4e0b\u4e00\u9879\u5148\u6307\u5411\u65b0\u8282\u70b9\n        newNode.prev = this.tail;  // \u7136\u540e\u628a\u65b0\u7684\u8282\u70b9\u7684\u4e0a\u4e00\u9879\u6307\u5411\u6700\u540e\u4e00\u4e2a\u8282\u70b9\n        this.tail = newNode;   // \u628atail\u7684\u6307\u9488\u6307\u5230\u65b0\u52a0\u5165\u7684node\u8282\u70b9\n      }\n      this.length ++;  // \u6dfb\u52a0\u957f\u5ea6\n    }\n\n    insert(position, data) {\n      if(position < 0 || position > this.length) return false;\n      let newNode = new DoublyNode(data);\n\n      if(position === 0) {\n        if(!this.head) {\n          this.append(data);\n        } else {\n          newNode.next = this.head;  // \u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u9879\u6307\u5411\u539f\u6765\u5934\u90e8\u8282\u70b9\u6307\u5411\u7684\u8282\u70b9\n          this.head.prev = newNode; // \u539f\u6765\u5934\u90e8\u8282\u70b9\u6307\u5411\u65b0\u7684\u8282\u70b9\n          this.head = newNode; // \u8ba9\u5f53\u524d\u7684head\u8282\u70b9\u6307\u5411\u65b0\u8282\u70b9\n        }\n      } else if(position === this.length) {\n        this.append(data);\n      }else {\n        let index = 0;\n        let current = this.head;\n        let previos = null;\n        while(index ++ < position) {\n          previos = current;  // \u4fdd\u6301\u8d77\u6765\u524d\u4e00\u9879\n          current = current.next;  // \u5f80\u540e\u632a\u4e00\u9879\n        }\n        newNode.prev = previos;\n        newNode.next = current;\n        current.prev = newNode;\n        previos.next = newNode;\n        this.length ++;\n        return true;\n      }\n    }\n    removeAt(position) {\n      if(position < 0 || position > this.length - 1) return null;\n      if (position === 0) {\n        if(this.length === 1) {\n          this.head = null;\n          this.tail = null;\n        } else {\n          this.head = this.head.next;  // head\u6307\u5411head\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n          this.head.prev = null;   // \u7136\u540e\u4e0a\u4e00\u4e2a\u8282\u70b9\u6307\u5411null;\n        }\n      } else if (position === this.length - 1) {\n        this.tail.prev.next = null;\n        this.tail = this.tail.prev;\n      } else {\n        let index = 0;\n        let current = this.head;\n        let previos = null;\n        while(index ++ < position) {\n          previos = current;  // \u4fdd\u6301\u8d77\u6765\u524d\u4e00\u9879\n          current = current.next;  // \u5f80\u540e\u632a\u4e00\u9879\n        }\n\n        previos.next = current.next;\n        current.next.prev = previos;\n      }\n      this.length --;\n    }\n  }\n\n\n  let listLinked = new DoublyLinkList();\n  listLinked.append('aaa')\n  listLinked.append('bbb')\n  listLinked.insert(1, 'ccc')\n  listLinked.insert(3, 'ddd')\n  listLinked.removeAt(3)\n  console.log(listLinked);\n")))}u.isMDXComponent=!0}}]);